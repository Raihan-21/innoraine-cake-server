{"version":3,"sources":["redux/reducer.js","components/Navbar.jsx","assets/pexels-ronmar-lacamiento-806363.jpg","components/Home.jsx","hooks/useFetch.js","components/Products.jsx","components/Product.jsx","components/Login.jsx","components/Register.jsx","components/CartItem.jsx","components/Summary.jsx","components/Cart.jsx","components/User/Orders.jsx","components/User/Profile.jsx","components/User/User.jsx","components/Checkout.jsx","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["authSlice","createSlice","name","initialState","isLogged","userid","username","cartItems","completed","reducers","login","state","action","payload","user","totalItems","quantity","logout","modifyTotal","dataIsComplete","actions","Navbar","useSelector","auth","completedData","dispatch","useDispatch","useEffect","a","fetch","res","json","data","error","console","log","getToken","checkLog","useCallback","className","to","fontSize","href","Home","src","cakeImage","alt","id","loading","useFetch","url","useState","setData","isLoading","setIsLoading","getData","Products","setQuantity","navigate","useNavigate","addCart","item","addedItem","Number","price","method","headers","body","JSON","stringify","CircularProgress","products","map","product","image","_id","itemname","desc","type","value","min","onChange","e","target","onClick","Product","useParams","width","schema","yup","shape","email","required","password","Login","errorMsg","setErrorMsg","clicked","setClicked","initialValues","validationSchema","onSubmit","values","errors","touched","handleChange","handleBlur","handleSubmit","variant","label","fullWidth","onBlur","helperText","Button","color","size","phone","typeError","Register","code","Swal","fire","title","showConfirmButton","icon","timer","setTimeout","CartItem","index","modifyQty","deleteItem","setLoading","prevState","disabled","Summary","total","confirm","Cart","completeAcc","emptyCart","setEmptyCart","items","setItems","setTotal","postModify","itemid","setloading","status","modifiedCount","i","filter","checkOut","checkCart","cart","reduce","acc","curr","Orders","address","kelurahan","kecamatan","kota","Profile","detail","city","TextField","User","tab","setTab","logoutRedux","Collapse","in","Checkout","minDate","setMinDate","confirmed","setConfirmed","pay","today","Date","tomorrow","setDate","getDate","toISOString","substring","receiver","date","Slide","direction","timeout","InputLabelProps","shrink","InputProps","inputProps","appear","enter","exit","mountOnEnter","unmountOnExit","totalquantity","totalprice","theme","createTheme","palette","primary","main","secondary","App","ThemeProvider","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fb2794d.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  isLogged: false,\r\n  userid: \"\",\r\n  username: \"\",\r\n  cartItems: 0,\r\n  completed: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    login: (state, action) => {\r\n      const { user, totalItems } = action.payload;\r\n      state.isLogged = true;\r\n      state.userid = user.userid;\r\n      state.username = user.username;\r\n      state.cartItems = totalItems.quantity;\r\n      state.completed = user.completed;\r\n    },\r\n    logout: (state) => {\r\n      state.isLogged = false;\r\n    },\r\n    modifyTotal: (state, action) => {\r\n      state.cartItems = action.payload;\r\n    },\r\n    dataIsComplete: (state) => {\r\n      state.completed = true;\r\n    },\r\n  },\r\n});\r\nexport const { login, logout, modifyTotal, dataIsComplete } = authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n","import { Link } from \"react-router-dom\";\r\nimport { useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { login } from \"../redux/reducer\";\r\nimport ShoppingCartIcon from \"@mui/icons-material/ShoppingCart\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\n\r\nconst Navbar = () => {\r\n  const isLogged = useSelector((state) => state.auth.isLogged);\r\n  const cartItems = useSelector((state) => state.auth.cartItems);\r\n  const completedData = useSelector((state) => state.auth.completed);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    const getToken = async () => {\r\n      const res = await fetch(\r\n        \"https://innoraine-cake-revamp.herokuapp.com/api/auth\"\r\n      );\r\n      const data = await res.json();\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        dispatch(login(data));\r\n      }\r\n    };\r\n    getToken();\r\n  }, [dispatch]);\r\n  const checkLog = useCallback(() => {\r\n    if (isLogged) {\r\n      return (\r\n        <div className=\"account\">\r\n          <Link to=\"cart\">\r\n            <div className=\"total\">{cartItems}</div>\r\n            <ShoppingCartIcon />\r\n          </Link>\r\n          <Link to=\"profile\">\r\n            <PersonIcon fontSize=\"large\" />\r\n            {}\r\n          </Link>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"account\">\r\n          <Link to=\"login\">Login</Link>\r\n          <Link to=\"register\" className=\"register-btn\">\r\n            Register\r\n          </Link>\r\n        </div>\r\n      );\r\n    }\r\n  }, [isLogged, cartItems]);\r\n  return (\r\n    <div className=\"navbar\">\r\n      <Link to=\"/\">\r\n        <h1>Innoraine Cake</h1>\r\n      </Link>\r\n      <div className=\"navigation\">\r\n        <Link to=\"/#\">Home</Link>\r\n        <a href=\"/#about\">About Us</a>\r\n        <Link to=\"products\">Products</Link>\r\n      </div>\r\n      {!completedData && isLogged && (\r\n        <div className=\"notice\">\r\n          Please complete your account data if you want to checkout\r\n          <Link to=\"/profile\">Go to profile</Link>\r\n        </div>\r\n      )}\r\n\r\n      {checkLog()}\r\n    </div>\r\n  );\r\n};\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/pexels-ronmar-lacamiento-806363.5c2d7dd2.jpg\";","import { Link } from \"react-router-dom\";\r\nimport cakeImage from \"../assets/pexels-ronmar-lacamiento-806363.jpg\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"container home\">\r\n      <div className=\"header\">\r\n        <div className=\"text\">\r\n          <h1>Fresh from the oven.</h1>\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed et\r\n            faucibus urna, ultricies rutrum quam. Maecenas dolor diam, commodo\r\n            quis dui ac, vulputate faucibus augue. Nam pretium euismod neque ut\r\n            consectetur. Sed a consectetur est. Nunc nunc ipsum, ultricies\r\n            bibendum pulvinar a, ultricies vel sapien.\r\n          </p>\r\n          <Link to=\"/products\">Explore</Link>\r\n        </div>\r\n        <img src={cakeImage} alt=\"cake\"></img>\r\n      </div>\r\n      <div className=\"about\" id=\"about\">\r\n        <img src={cakeImage} alt=\"cake\" loading=\"lazy\"></img>\r\n        <div className=\"text\">\r\n          <h1>About Us</h1>\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed et\r\n            faucibus urna, ultricies rutrum quam. Maecenas dolor diam, commodo\r\n            quis dui ac, vulputate faucibus augue. Nam pretium euismod neque ut\r\n            consectetur. Sed a consectetur est. Nunc nunc ipsum, ultricies\r\n            bibendum pulvinar a, ultricies vel sapien. Mauris maximus tortor a\r\n            ornare molestie. Curabitur tincidunt porta elit id finibus. Proin\r\n            viverra rutrum quam id aliquet. Duis consectetur tempor porttitor\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const res = await fetch(url);\r\n        const data = await res.json();\r\n        setData(data);\r\n        setIsLoading(false);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getData();\r\n  }, [url]);\r\n  return [data, isLoading];\r\n};\r\n\r\nexport default useFetch;\r\n","import { useState, useCallback } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useFetch from \"../hooks/useFetch\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { CircularProgress } from \"@mui/material\";\r\n\r\nconst Products = () => {\r\n  const [data, isLoading] = useFetch(\r\n    \"https://innoraine-cake-revamp.herokuapp.com/api/products\"\r\n  );\r\n  const [quantity, setQuantity] = useState(1);\r\n  const userid = useSelector((state) => state.auth.userid);\r\n  const navigate = useNavigate();\r\n  const addCart = useCallback(\r\n    async (item) => {\r\n      if (userid) {\r\n        const addedItem = {\r\n          ...item,\r\n          quantity: Number(quantity),\r\n          price: item.price * Number(quantity),\r\n        };\r\n        const res = await fetch(\r\n          `https://innoraine-cake-revamp.herokuapp.com/api/cart/${userid}`,\r\n          {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ addedItem }),\r\n          }\r\n        );\r\n        const data = await res.json();\r\n      } else {\r\n        navigate(\"/login\");\r\n      }\r\n    },\r\n    [navigate, quantity, userid]\r\n  );\r\n\r\n  return (\r\n    <div className=\"container products\">\r\n      {isLoading ? (\r\n        <CircularProgress></CircularProgress>\r\n      ) : (\r\n        data.products.map((product) => (\r\n          <div className=\"product\" key={product._id}>\r\n            <img\r\n              src={`https://innoraine-cake-revamp.herokuapp.com/uploads/${product.image}`}\r\n              alt=\"item\"\r\n              loading=\"lazy\"\r\n            ></img>\r\n            <div className=\"text\">\r\n              <Link to={`/products/${product._id}`}>\r\n                <h1>{product.itemname}</h1>\r\n              </Link>\r\n              <p>{product.desc}</p>\r\n              <div className=\"add\">\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"\"\r\n                  id=\"\"\r\n                  value={quantity}\r\n                  min={1}\r\n                  onChange={(e) => setQuantity(e.target.value)}\r\n                />\r\n                <button\r\n                  onClick={() => {\r\n                    addCart(product);\r\n                  }}\r\n                >\r\n                  Add to cart\r\n                </button>\r\n                <p className=\"price\">Rp. {product.price}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import { useParams } from \"react-router-dom\";\r\nimport useFetch from \"../hooks/useFetch\";\r\n\r\nconst Product = () => {\r\n  const { id } = useParams();\r\n  const [data, isLoading] = useFetch(\r\n    `https://innoraine-cake-revamp.herokuapp.com/api/products${id}`\r\n  );\r\n  // useEffect(() => {\r\n  //   const getProduct = async () => {\r\n  //     try {\r\n  //       const res = await fetch(`/products${id}`);\r\n  //       const data = await res.json();\r\n  //       if (data.product) {\r\n  //         setProduct(data.product);\r\n  //       } else {\r\n  //         console.log(data.error);\r\n  //       }\r\n  //     } catch (error) {\r\n  //       console.log(error);\r\n  //     }\r\n  //   };\r\n  //   getProduct();\r\n  // }, [id]);\r\n  return (\r\n    <div className=\"container product-details\">\r\n      {!isLoading && (\r\n        <>\r\n          <div className=\"product\">\r\n            <h2>{data.product.itemname}</h2>\r\n            <img\r\n              src={`https://innoraine-cake-revamp.herokuapp.com/uploads/${data.product.image}`}\r\n              alt=\"cake\"\r\n              width={100}\r\n            />\r\n            <p>{data.product.desc}</p>\r\n          </div>\r\n          <div className=\"order-details\"></div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../redux/reducer\";\r\nimport Textfield from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst schema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .email(\"Email must be a valid email\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string()\r\n    .min(5, \"Password must be at least 5 characters\")\r\n    .required(\"Password is required\"),\r\n});\r\nconst Login = () => {\r\n  const [errorMsg, setErrorMsg] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [clicked, setClicked] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div className=\"container login\">\r\n      <Formik\r\n        initialValues={{ email: \"\", password: \"\" }}\r\n        validationSchema={schema}\r\n        onSubmit={async (values, action) => {\r\n          setClicked(true);\r\n          const res = await fetch(\r\n            \"https://innoraine-cake-revamp.herokuapp.com/api/login\",\r\n            {\r\n              method: \"POST\",\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n              body: JSON.stringify(values),\r\n            }\r\n          );\r\n          const data = await res.json();\r\n          if (data.error) {\r\n            setErrorMsg(data.error);\r\n            setClicked(false);\r\n          } else {\r\n            dispatch(login(data));\r\n            navigate(\"/\");\r\n          }\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n        }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <h1>Login</h1>\r\n            <Textfield\r\n              name=\"email\"\r\n              variant=\"outlined\"\r\n              label=\"Email\"\r\n              fullWidth\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              error={\r\n                (touched.email && errors.email) || errorMsg.email ? true : false\r\n              }\r\n              helperText={\r\n                touched.email && errors.email ? errors.email : errorMsg.email\r\n              }\r\n              required\r\n            />{\" \"}\r\n            <br /> <br />\r\n            <Textfield\r\n              name=\"password\"\r\n              variant=\"outlined\"\r\n              label=\"Password\"\r\n              fullWidth\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              error={\r\n                (touched.password && errors.password) || errorMsg.password\r\n                  ? true\r\n                  : false\r\n              }\r\n              helperText={\r\n                touched.password && errors.password\r\n                  ? errors.password\r\n                  : errorMsg.password\r\n              }\r\n              type=\"password\"\r\n              required\r\n            />\r\n            <br /> <br />\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              {clicked ? (\r\n                <CircularProgress\r\n                  color=\"secondary\"\r\n                  size={26}\r\n                ></CircularProgress>\r\n              ) : (\r\n                \"Login\"\r\n              )}\r\n            </Button>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\nimport Textfield from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport * as yup from \"yup\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst schema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .email(\"Email must be a valid email\")\r\n    .required(\"Email is required\"),\r\n  username: yup.string().required(\"Username is required\"),\r\n  phone: yup\r\n    .number()\r\n    .typeError(\"Phone must be in numbers\")\r\n    .required(\"Phone is required\"),\r\n  password: yup\r\n    .string()\r\n    .min(5, \"Password must be at least 5 characters\")\r\n    .required(\"Password is required\"),\r\n});\r\n\r\nconst Register = () => {\r\n  const [errorMsg, setErrorMsg] = useState({\r\n    email: \"\",\r\n    username: \"\",\r\n    phone: \"\",\r\n    password: \"\",\r\n  });\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div className=\"container register\">\r\n      <Formik\r\n        initialValues={{\r\n          email: \"\",\r\n          username: \"\",\r\n          phone: \"\",\r\n          password: \"\",\r\n        }}\r\n        validationSchema={schema}\r\n        onSubmit={async (values, action) => {\r\n          const res = await fetch(\r\n            \"https://innoraine-cake-revamp.herokuapp.com/api/register\",\r\n            {\r\n              method: \"POST\",\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n              body: JSON.stringify(values),\r\n            }\r\n          );\r\n          const data = await res.json();\r\n          if (data.error) {\r\n            if (data.error.code === 11000) {\r\n              setErrorMsg({ ...errorMsg, email: \"Email has been taken\" });\r\n            }\r\n          } else {\r\n            Swal.fire({\r\n              title: \"Account created!\",\r\n              showConfirmButton: false,\r\n              icon: \"success\",\r\n              timer: 1000,\r\n            });\r\n            setTimeout(() => {\r\n              navigate(\"/login\");\r\n            }, 1000);\r\n          }\r\n        }}\r\n      >\r\n        {({ touched, errors, handleChange, handleBlur, handleSubmit }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <h1>Register</h1> <br /> <br />\r\n            <Textfield\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              variant=\"outlined\"\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              error={\r\n                (touched.email && errors.email) || errorMsg.email ? true : false\r\n              }\r\n              helperText={\r\n                touched.email && errors.email ? errors.email : errorMsg.email\r\n              }\r\n              fullWidth\r\n              required\r\n            />{\" \"}\r\n            <br /> <br />\r\n            <Textfield\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              variant=\"outlined\"\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              error={touched.username && errors.username ? true : false}\r\n              helperText={touched.username && errors.username}\r\n              fullWidth\r\n              required\r\n            />\r\n            <br /> <br />\r\n            <Textfield\r\n              label=\"Phone\"\r\n              name=\"phone\"\r\n              variant=\"outlined\"\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              error={touched.phone && errors.phone ? true : false}\r\n              helperText={touched.phone && errors.phone}\r\n              fullWidth\r\n              required\r\n            />\r\n            <br /> <br />\r\n            <Textfield\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              variant=\"outlined\"\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              error={touched.password && errors.password ? true : false}\r\n              helperText={touched.password && errors.password}\r\n              fullWidth\r\n              required\r\n            />{\" \"}\r\n            <br /> <br />\r\n            <Button type=\"submit\" variant=\"contained\">\r\n              Register\r\n            </Button>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import { useCallback } from \"react\";\r\nimport { useState } from \"react\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nconst CartItem = ({ item, index, modifyQty, deleteItem }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const setLoading = useCallback(() => {\r\n    setIsLoading((prevState) => !prevState);\r\n  }, []);\r\n  return (\r\n    <div className={`item ${isLoading ? \"loading\" : \"\"}`}>\r\n      <img\r\n        src={`https://innoraine-cake-revamp.herokuapp.com/uploads/${item.image}`}\r\n        alt=\"cake\"\r\n      ></img>\r\n      <div className=\"main\">\r\n        <h2>{item.itemname}</h2>\r\n        <p>{item.price}</p>\r\n        <div className=\"quantity-edit\">\r\n          <button\r\n            onClick={() =>\r\n              modifyQty(\"decrement\", index, item.price, item._id, setLoading)\r\n            }\r\n            disabled={item.quantity === 1 || isLoading ? true : false}\r\n          >\r\n            -\r\n          </button>\r\n          <div>{item.quantity}</div>\r\n          <button\r\n            onClick={() =>\r\n              modifyQty(\"increment\", index, item.price, item._id, setLoading)\r\n            }\r\n            disabled={isLoading ? true : false}\r\n          >\r\n            +\r\n          </button>\r\n          <button\r\n            onClick={() => deleteItem(item._id, item.quantity, item.price)}\r\n          >\r\n            <DeleteIcon fontSize=\"small\"></DeleteIcon>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import { Button } from \"@mui/material\";\r\n\r\nconst Summary = ({ total, confirm }) => {\r\n  return (\r\n    <div className=\"summary\">\r\n      <h2>Summary:</h2>\r\n      <div className=\"total total=item\">\r\n        Total items: <span>{total.quantity}</span>{\" \"}\r\n      </div>\r\n      <div className=\"total total-price\">\r\n        Total Price: <span>{total.price}</span>{\" \"}\r\n      </div>\r\n      <Button variant=\"contained\" fullWidth onClick={confirm}>\r\n        Proceed\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Summary;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport CartItem from \"./CartItem\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { modifyTotal } from \"../redux/reducer\";\r\nimport Summary from \"./Summary\";\r\n\r\nconst Cart = () => {\r\n  const userid = useSelector((state) => state.auth.userid);\r\n  const completeAcc = useSelector((state) => state.auth.completed);\r\n  const [emptyCart, setEmptyCart] = useState(true);\r\n  const [items, setItems] = useState([]);\r\n  const [total, setTotal] = useState({\r\n    quantity: 0,\r\n    price: 0,\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const postModify = useCallback(\r\n    async (quantity, price, itemid) => {\r\n      const res = await fetch(\r\n        `https://innoraine-cake-revamp.herokuapp.com/api/cart/${userid}/edit`,\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ quantity, price, itemid }),\r\n        }\r\n      );\r\n      const data = await res.json();\r\n      return data;\r\n    },\r\n    [userid]\r\n  );\r\n  const modifyQty = useCallback(\r\n    async (type, index, price, itemid, setloading) => {\r\n      setloading();\r\n      if (type === \"increment\") {\r\n        const data = await postModify(1, price, itemid);\r\n        if (data.status.modifiedCount) {\r\n          setItems(\r\n            items.map((item, i) => {\r\n              if (i === index) {\r\n                item = { ...item, quantity: item.quantity + 1 };\r\n              }\r\n              return item;\r\n            })\r\n          );\r\n        }\r\n      }\r\n      if (type === \"decrement\") {\r\n        const data = await postModify(-1, -price, itemid);\r\n        if (data.status.modifiedCount) {\r\n          setItems(\r\n            items.map((item, i) => {\r\n              if (i === index) {\r\n                item = { ...item, quantity: item.quantity - 1 };\r\n              }\r\n              return item;\r\n            })\r\n          );\r\n        }\r\n      }\r\n      setloading();\r\n    },\r\n    [items, postModify]\r\n  );\r\n  const deleteItem = useCallback(\r\n    async (itemid, quantity, price) => {\r\n      const res = await fetch(\r\n        `https://innoraine-cake-revamp.herokuapp.com/api/cart/${userid}/delete`,\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ itemid, quantity, price }),\r\n        }\r\n      );\r\n      const data = await res.json();\r\n      if (data.modifiedCount === 0) return;\r\n      setItems(items.filter((item) => item._id !== itemid));\r\n    },\r\n    [userid, items]\r\n  );\r\n  const checkOut = useCallback(() => {\r\n    if (completeAcc) navigate(\"/profile\");\r\n    navigate(\"/checkout\");\r\n  }, [completeAcc, navigate]);\r\n  const checkCart = useCallback(() => {\r\n    if (emptyCart) {\r\n      return <h1>No items in your cart</h1>;\r\n    } else {\r\n      return (\r\n        <div className=\"cart\">\r\n          <div className=\"items\">\r\n            {!loading &&\r\n              items.map((item, i) => (\r\n                <CartItem\r\n                  key={i}\r\n                  item={item}\r\n                  index={i}\r\n                  modifyQty={modifyQty}\r\n                  deleteItem={deleteItem}\r\n                />\r\n              ))}\r\n          </div>\r\n          <Summary total={total} confirm={checkOut} />\r\n        </div>\r\n      );\r\n    }\r\n  }, [emptyCart, loading, items, total, modifyQty, deleteItem, checkOut]);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const res = await fetch(\r\n        `https://innoraine-cake-revamp.herokuapp.com/api/cart/${userid}`\r\n      );\r\n      const data = await res.json();\r\n      if (data.cart.userid) {\r\n        setEmptyCart(false);\r\n        setItems(data.cart.items);\r\n      } else {\r\n        setEmptyCart(true);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    getData();\r\n  }, [userid]);\r\n  useEffect(() => {\r\n    setTotal(\r\n      items.reduce(\r\n        (acc, curr) => {\r\n          return {\r\n            quantity: acc.quantity + curr.quantity,\r\n            price: acc.price + curr.quantity * curr.price,\r\n          };\r\n        },\r\n        { quantity: 0, price: 0 }\r\n      )\r\n    );\r\n  }, [items]);\r\n  useEffect(() => {\r\n    dispatch(modifyTotal(total.quantity));\r\n  }, [total, dispatch]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {loading ? <h3>Loading...</h3> : checkCart()}\r\n    </div>\r\n  );\r\n};\r\nexport default Cart;\r\n","const Orders = () => {\r\n  return (\r\n    <div className=\"orders\">\r\n      <h2>Orders</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","import { Formik } from \"formik\";\r\nimport { Button, TextField } from \"@mui/material\";\r\nimport * as yup from \"yup\";\r\nimport { dataIsComplete } from \"../../redux/reducer\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst schema = yup.object().shape({\r\n  username: yup.string().required(),\r\n  email: yup.string().email().required(),\r\n  address: yup.string().required(),\r\n  kelurahan: yup.string().required(),\r\n  kecamatan: yup.string().required(),\r\n  kota: yup.string().required(),\r\n});\r\n\r\nconst Profile = ({ user }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"profile\">\r\n      <h2>Profile</h2>\r\n      <Formik\r\n        initialValues={{\r\n          username: user.username,\r\n          email: user.email,\r\n          address: user.address.detail,\r\n          kelurahan: user.address.kelurahan,\r\n          kecamatan: user.address.kecamatan,\r\n          kota: user.address.city,\r\n        }}\r\n        validationSchema={schema}\r\n        onSubmit={async (values) => {\r\n          const res = await fetch(`/api/profile/${user._id}/update`, {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(values),\r\n          });\r\n          const data = await res.json();\r\n          dispatch(dataIsComplete());\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          touched,\r\n          errors,\r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n        }) => (\r\n          <form action=\"\" onSubmit={handleSubmit}>\r\n            <TextField\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              variant=\"outlined\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              error={errors.username && touched.username ? true : false}\r\n              helperText={\r\n                errors.username && touched.username ? errors.username : \"\"\r\n              }\r\n              value={values.username}\r\n              required\r\n            />{\" \"}\r\n            <br /> <br />\r\n            <TextField\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              variant=\"outlined\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              error={errors.email && touched.email ? true : false}\r\n              helperText={errors.email && touched.email ? errors.email : \"\"}\r\n              required\r\n              value={values.email}\r\n            />\r\n            <div className=\"address\">\r\n              <h4>Address</h4>\r\n              <TextField\r\n                label=\"Alamat\"\r\n                name=\"address\"\r\n                variant=\"outlined\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={errors.address && touched.address ? true : false}\r\n                helperText={\r\n                  errors.address && touched.address ? errors.address : \"\"\r\n                }\r\n                value={values.address}\r\n                required\r\n              />\r\n              <TextField\r\n                label=\"Kelurahan\"\r\n                name=\"kelurahan\"\r\n                variant=\"outlined\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={errors.kelurahan && touched.kelurahan ? true : false}\r\n                helperText={\r\n                  errors.kelurahan && touched.kelurahan ? errors.kelurahan : \"\"\r\n                }\r\n                value={values.kelurahan}\r\n                required\r\n              />\r\n              <br /> <br />\r\n              <TextField\r\n                label=\"Kecamatan\"\r\n                name=\"kecamatan\"\r\n                variant=\"outlined\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={errors.kecamatan && touched.kecamatan ? true : false}\r\n                helperText={\r\n                  errors.kecamatan && touched.kecamatan ? errors.kecamatan : \"\"\r\n                }\r\n                value={values.kecamatan}\r\n                required\r\n              />\r\n              <TextField\r\n                label=\"Kota\"\r\n                name=\"kota\"\r\n                variant=\"outlined\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={errors.kota && touched.kota ? true : false}\r\n                helperText={errors.kota && touched.kota ? errors.kota : \"\"}\r\n                required\r\n                value={values.kota}\r\n              />{\" \"}\r\n              <br /> <br />\r\n              <Button variant=\"contained\" type=\"submit\">\r\n                Save\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { Collapse } from \"@mui/material\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport Orders from \"./Orders\";\r\nimport Profile from \"./Profile\";\r\nimport { logout } from \"../../redux/reducer\";\r\n\r\nconst User = () => {\r\n  const userid = useSelector((state) => state.auth.userid);\r\n  const [data, isLoading] = useFetch(`/api/profile/${userid}`);\r\n  const [tab, setTab] = useState(\"profile\");\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const logoutRedux = useCallback(async () => {\r\n    const res = await fetch(\"/api/logout\");\r\n    const data = await res.json();\r\n    dispatch(logout());\r\n    navigate(\"/\");\r\n  }, [navigate, dispatch]);\r\n  return (\r\n    <div className=\"container account\">\r\n      <h2 className=\"username\">{!isLoading && data.user.username}</h2>\r\n      {!isLoading && (\r\n        <div className=\"account-data\">\r\n          <div className=\"tabs\">\r\n            <div\r\n              className={`tab ${tab === \"profile\" ? \"active\" : \"\"}`}\r\n              onClick={() => setTab(\"profile\")}\r\n            >\r\n              Profile\r\n            </div>\r\n            <div\r\n              className={`tab ${tab === \"orders\" ? \"active\" : \"\"}`}\r\n              onClick={() => setTab(\"orders\")}\r\n            >\r\n              Order History\r\n            </div>\r\n            <div className=\"tab\" onClick={logoutRedux}>\r\n              Logout\r\n            </div>\r\n          </div>\r\n          <div className=\"section\">\r\n            <Collapse in={tab === \"profile\"}>\r\n              <Profile user={data.user} />\r\n            </Collapse>\r\n            <Collapse in={tab === \"orders\"}>\r\n              <Orders />\r\n            </Collapse>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import { Formik } from \"formik\";\r\nimport { TextField, Button, Slide } from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport useFetch from \"../hooks/useFetch\";\r\nimport Summary from \"./Summary\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\n\r\nconst Checkout = () => {\r\n  const userid = useSelector((state) => state.auth.userid);\r\n  const [data, isLoading] = useFetch(\r\n    `https://innoraine-cake-revamp.herokuapp.com/api/checkout/${userid}`\r\n  );\r\n  const [minDate, setMinDate] = useState(\"\");\r\n  const [confirmed, setConfirmed] = useState(false);\r\n  const navigate = useNavigate();\r\n  const pay = useCallback(() => {\r\n    navigate(\"/products\");\r\n  }, [navigate]);\r\n  useEffect(() => {\r\n    const today = new Date();\r\n    const tomorrow = new Date(today.setDate(today.getDate() + 1));\r\n    setMinDate(tomorrow.toISOString().substring(0, 10));\r\n  }, []);\r\n  return (\r\n    <div className=\"container checkout\">\r\n      {!isLoading && (\r\n        <>\r\n          <Formik\r\n            initialValues={{\r\n              receiver: data.user.username,\r\n              date: \"\",\r\n              address: data.user.address.detail,\r\n              kelurahan: data.user.address.kelurahan,\r\n              kecamatan: data.user.address.kecamatan,\r\n              kota: data.user.address.city,\r\n            }}\r\n            onSubmit={(values) => {\r\n              setConfirmed(true);\r\n            }}\r\n          >\r\n            {({ values, handleChange, handleSubmit }) => (\r\n              <Slide in={!confirmed} direction=\"right\" timeout={400}>\r\n                <form\r\n                  action=\"\"\r\n                  onSubmit={handleSubmit}\r\n                  className={`confirm ${!confirmed ? \"active\" : \"\"}`}\r\n                >\r\n                  <h2>Confirm Data</h2>\r\n                  <div className=\"data\">\r\n                    <TextField\r\n                      label=\"Receiver\"\r\n                      name=\"receiver\"\r\n                      onChange={handleChange}\r\n                      value={values.receiver}\r\n                    />\r\n                    <TextField\r\n                      label=\"Order Date\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      name=\"date\"\r\n                      type=\"date\"\r\n                      onChange={handleChange}\r\n                      InputProps={{\r\n                        inputProps: {\r\n                          min: minDate,\r\n                        },\r\n                      }}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"address\">\r\n                    <h3>Address</h3>\r\n                    <TextField\r\n                      label=\"Address\"\r\n                      name=\"address\"\r\n                      value={values.address}\r\n                    />\r\n                    <TextField\r\n                      label=\"Kelurahan\"\r\n                      name=\"kelurahan\"\r\n                      value={values.kelurahan}\r\n                    />{\" \"}\r\n                    <br /> <br />\r\n                    <TextField\r\n                      label=\"Kecamatan\"\r\n                      name=\"kecamatan\"\r\n                      value={values.kecamatan}\r\n                    />\r\n                    <TextField label=\"Kota\" name=\"kota\" value={values.kota} />{\" \"}\r\n                  </div>\r\n\r\n                  <Button variant=\"contained\" type=\"submit\">\r\n                    Confirm\r\n                  </Button>\r\n                </form>\r\n              </Slide>\r\n            )}\r\n          </Formik>\r\n          <Slide\r\n            in={confirmed}\r\n            direction=\"left\"\r\n            timeout={{\r\n              appear: 400,\r\n              enter: 600,\r\n              exit: 400,\r\n            }}\r\n            mountOnEnter\r\n            unmountOnExit\r\n          >\r\n            <div className={`items-data ${confirmed ? \"active\" : \"\"}`}>\r\n              <div className=\"items\">\r\n                {data.items.items.map((item, i) => (\r\n                  <div className=\"item\" key={i}>\r\n                    <img\r\n                      src={`https://innoraine-cake-revamp.herokuapp.com/uploads/${item.image}`}\r\n                      alt=\"\"\r\n                    />\r\n                    <div className=\"main\">\r\n                      <h3>{item.itemname}</h3>\r\n                      <p>\r\n                        {item.price} x {item.quantity}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <Summary\r\n                total={{\r\n                  quantity: data.items.totalquantity,\r\n                  price: data.items.totalprice,\r\n                }}\r\n                confirm={pay}\r\n              />\r\n              <div className=\"summary-btn\">\r\n                <Button variant=\"contained\" onClick={() => setConfirmed(false)}>\r\n                  Go back\r\n                </Button>\r\n                <Link to=\"/cart\">\r\n                  <Button variant=\"contained\">Cancel</Button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </Slide>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","import \"./styles/App.scss\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport Products from \"./components/Products\";\nimport Product from \"./components/Product\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport { createTheme, ThemeProvider } from \"@mui/material\";\nimport Cart from \"./components/Cart\";\nimport User from \"./components/User/User\";\nimport Checkout from \"./components/Checkout\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#fca400\",\n    },\n    secondary: {\n      main: \"#ffca68\",\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"login\" element={<Login />} />\n            <Route path=\"register\" element={<Register />} />\n            <Route path=\"products\" element={<Products />} />\n            <Route path=\"products/:id\" element={<Product />} />\n            <Route path=\"cart\" element={<Cart />} />\n            <Route path=\"profile\" element={<User />} />\n            <Route path=\"checkout\" element={<Checkout />} />\n          </Routes>\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport authSlice from \"./reducer\";\r\n\r\n// const store = createStore(reducer);\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: authSlice,\r\n  },\r\n});\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}